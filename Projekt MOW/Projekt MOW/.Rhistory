rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
5+5
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R", encoding = "windows-1250")
library("GA", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("cec2013", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("cluster", lib.loc="C:/Program Files/Microsoft/MRO-3.3.2/library")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
cec
cec2013(8,10)
cec2013(2,10)
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
f <- function(x) abs(x) + cos(x) curve(f, -20, 20) fitness <- function(x) - f(x) GA <- ga(type = "real-valued", fitness = fitness, min = -20, max = 20) summary(GA) plot(GA)
f <- function(x) cos(x) curve(f, -20, 20) fitness <- function(x) - f(x) GA <- ga(type = "real-valued", fitness = fitness, min = -20, max = 20) summary(GA) plot(GA)
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
install.packages("doRNG", lib="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("doRNG", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
 ga(type = "real-valued", fitness = fx, min = -100, max = 100)
library("doRNG", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
library("cec2013", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
library("GA", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("cec2013", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("doRNG", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
plot(GA)
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
plot(GA30)
plot(GA10)
plot(GA10)
plot(GA50)
Summary(GA10)
summary(GA10)
summary(GA30)
summary(GA30)
summary(GA50)
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
summary(GA10)
summary(GA30) 
summary(GA50)
plot(GA50)
plot(GA30)
plot(GA10)
library("ggplot2", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("cluster", lib.loc="C:/Program Files/Microsoft/MRO-3.3.2/library")
ggplot(GA10, aes(Petal.Length, Petal.Width, color = Species)) + geom_point()
library(ggplot2)
ggplot(GA10, aes(Petal.Length, Petal.Width, color = Species)) + geom_point()
GA10 <- ga(type = "real-valued", fitness = fx, min = rep(-100,2), max = rep(100,2), popSize = 100, seed = 1234, monitor = NULL, maxiter = 20)
ggplot(GA10, aes(Petal.Length, Petal.Width, color = Species)) + geom_point()
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
ggplot(GA10, aes(Petal.Length, Petal.Width, color = Species)) + geom_point()
ggplot(as.matrix(GA10), aes(Petal.Length, Petal.Width, color = Species)) + geom_point()
GA10
ggplot(as.vector(GA10), aes(Petal.Length, Petal.Width, color = Species)) + geom_point()
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
ggplot(as.vector(GA10), aes(Petal.Length, Petal.Width, color = Species)) + geom_point()
library(ggplot2)
library(ggplot2)
ggplot(as.vector(GA10), aes(Petal.Length, Petal.Width, color = Species)) + geom_point()
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
library("GA", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("cluster", lib.loc="C:/Program Files/Microsoft/MRO-3.3.2/library")
library("cec2013", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("doRNG", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
ggplot(as.vector(data.class(GA10)), aes(Petal.Length, Petal.Width, color = Species)) + geom_point()
ggplot(as.vector(data.matrix(GA10)), aes(Petal.Length, Petal.Width, color = Species)) + geom_point()
ggplot(as.vector(data.entry(GA10)), aes(Petal.Length, Petal.Width, color = Species)) + geom_point()
summary(GA10)
plot(GA$population)
plot(GA10$population)
plot(GA10$bestSol)
GA10$bestSol
GA10$iter
GA10$max
dim(GA10)
dim(GA10)
GA10$summary
iter(GA10)
outer(GA10)
list(GA10)
data10= data.frame(wektor=GA10)
install.packages("benchmark", lib="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("benchmark", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
out <- benchmark(GA10,GA30,GA50) out$average <- with(out, average <- elapsed / replications) out[, c(1:3, 5, 4)]
out <- benchmark(GA10,GA30,GA50)
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
out <- benchmark(     GA10 <- ga(type = "real-valued", fitness = fx, min = rep(-100, 10), max = rep(100, 10), popSize = 100, seed = 1234, monitor = NULL, maxiter = 20), GA30 <- ga(type = "real-valued", fitness = fx, min = rep(-100, 30), max = rep(100, 30), popSize = 300, seed = 1234, monitor = NULL, maxiter = 30), GA50 <- ga(type = "real-valued", fitness = fx, min = rep(-100, 50), max = rep(100, 50), popSize = 500, seed = 1234, monitor = NULL, maxiter = 40), columns = c("test", "replications", "elapsed", "relative"),                  order = "test",                  replications = 10) )
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
install.packages("rbenchmark", lib="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
unloadNamespace("benchmark")
library("rbenchmark", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
GA.lastpop = tail(GA.data,100)
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
library("GA", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("cec2013", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("doRNG", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
GA@solution
GA@solution
GA10.lastpop = tail(GA10.data,100)
GA10@population
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
library("GA", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("cec2013", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("doRNG", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("cluster", lib.loc="C:/Program Files/Microsoft/MRO-3.3.2/library")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
kmeans(GA10@population,3,iter.max = 10,nstart = 10)
kmeans(GA10@population, 5, iter.max = 10, nstart = 10)
kmeans(GA10@population, 5, iter.max = 100, nstart = 10)
kmeans(GA10@population, 5, iter.max = 10, nstart = 20)
kmeans(GA10@population, 5, iter.max = 10, nstart = 20)
kmeans(GA10@population, 10, iter.max = 10, nstart = 20)
library("cec2013", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("doRNG", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("cluster", lib.loc="C:/Program Files/Microsoft/MRO-3.3.2/library")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
hclust(GA10@population, method = "complete", members = NULL)
hclust(GA10@population, method = "complete", members = TRUE)
hclust(GA10@population, method = "complete")
hclust(dist(cent) ^ 2, method = "complete", members = GA10@population)
hclust(dist(GA10) ^ 2, method = "complete", members = GA10@population)
hclust(dist(GA10@population), method = "complete")
plot(hclust(dist(GA10@population), method = "complete"))
plot(hclust(dist(GA10@population), method = "average"))
plot(hclust(dist(GA10@population), method = "single"))
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
plot(hclust(dist(GA10@population), method = "single"))
library("cec2013", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("doRNG", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("cluster", lib.loc="C:/Program Files/Microsoft/MRO-3.3.2/library")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
plot(hclust(dist(GA10@population), method = "single"))
source("C:\\Users\\konra\\Source\\Repos\\MOW-AE\\Projekt MOW\\Projekt MOW\\script.R")
source("C:\\Users\\konra\\Source\\Repos\\MOW-AE\\Projekt MOW\\Projekt MOW\\script.R")
library("doRNG", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("cluster", lib.loc="C:/Program Files/Microsoft/MRO-3.3.2/library")
library("cec2013", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
plot(hclust(dist(GA10@population), method = "single"))
2+2
2+2
library("GA", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("cec2013", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("doRNG", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("cluster", lib.loc="C:/Program Files/Microsoft/MRO-3.3.2/library")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
plot(hclust(dist(GA10@population), method = "complete"))
plot(GA10)
GA10 <- ga(type = "real-valued", A10 <- ga(type = "real-valued",      fitness = fx,       min = rep(-100, 10),        max = rep(100, 10),        popSize = 100,         seed = 1234, monitor = NULL, maxiter = 20) GA10 <- ga(type = "real-valued",fitness = fx, min = rep(-100, 10),  max = rep(100, 10),  popSize = 100,   seed = 1234, monitor = NULL, maxiter = 20)
GA7 <- ga(type = "real-valued",fitness = fx, min = rep(-100, 10),  max = rep(100, 10),  popSize = 100,   seed = 1234, monitor = NULL, maxiter = 20)
plot(GA7)
plot(GA10)
fx1 <- function(x) { return(cec2013(7, x))}
GA6 <- ga(type = "real-valued",fitness = fx1, min = rep(-100, 10),  max = rep(100, 10),  popSize = 100,   seed = 1234, monitor = NULL, maxiter = 20)
plot(GA6)
GA6 <- ga(type = "real-valued",fitness = fx1, min = rep(-100, 10),  max = rep(100, 10),  popSize = 100,   seed = 1234, monitor = NULL, maxiter = 500)
plot(GA6)
plot(GA6)
plot(GA6)
if (!"GA" %in% row.names(installed.packages()))     install.packages("GA") # załadowanie tego pakietu library(GA)
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
plot(GA10)
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
rtvs::debug_source("C:/Users/konra/Source/Repos/MOW-AE/Projekt MOW/Projekt MOW/script.R")
GA10 <- ga(type = "real-valued",fitness = fx, min = rep(-100, 10),  max = rep(100, 10),  popSize = 100,   seed = 1234, monitor = NULL, maxiter = 5000,pmutation = 0.2)
plot(GA10)
plot(GA10)
GA10 <- ga(type = "real-valued",fitness = fx, min = rep(-100, 10),  max = rep(100, 10),  popSize = 100,   seed = 1234, monitor = NULL, maxiter = 500,pmutation = 0.5)
plot(GA10)
GA10 <- ga(type = "real-valued",fitness = fx, min = rep(-100, 10),  max = rep(100, 10),  popSize = 100,   seed = 1234, monitor = NULL, maxiter = 500,pmutation = 0.5,mutation = "gareal_raMutation")
plot(GA10)
GA10 <- ga(type = "real-valued",fitness = fx, min = rep(-100, 10),  max = rep(100, 10),  popSize = 100,   seed = 1234, monitor = NULL, maxiter = 50,pmutation = 0.5) GA30 <- ga(type = "real-valued", fitness = fx, min = rep(-100, 30), max = rep(100, 30), popSize = 300, seed = 1234, monitor = NULL, maxiter = 30, pmutation = 0.5) GA50 <- ga(type = "real-valued", fitness = fx, min = rep(-100, 50), max = rep(100, 50), popSize = 500, seed = 1234, monitor = NULL, maxiter = 40, pmutation = 0.5)
plot(GA10)
plot(GA30)
plot(GA50)
GA10 <- ga(type = "real-valued",fitness = fx, min = rep(-100, 10),  max = rep(100, 10),  popSize = 100,   seed = 1234, monitor = NULL, maxiter = 100,pmutation = 0.5) GA30 <- ga(type = "real-valued", fitness = fx, min = rep(-100, 30), max = rep(100, 30), popSize = 300, seed = 1234, monitor = NULL, maxiter = 300, pmutation = 0.5) GA50 <- ga(type = "real-valued", fitness = fx, min = rep(-100, 50), max = rep(100, 50), popSize = 500, seed = 1234, monitor = NULL, maxiter = 500, pmutation = 0.5)
plot(GA10)
plot(GA30)
plot(GA50)
kmeans(GA10@population, 3, iter.max = 10, nstart = 10) #klastry 3, iter 10, poczatkow 10 pkt 
plot(kmeans(GA10@population, 3, iter.max = 10, nstart = 10)) #klastry 3, iter 10, poczatkow 10 pkt 
kmeans(GA10@population, 3, iter.max = 10, nstart = 10) #klastry 3, iter 10, poczatkow 10 pkt 
kmeans(GA10@population, 4, iter.max = 100, nstart = 10) #klastry 3, iter 10, poczatkow 10 pkt 
kmeans(GA10@population, 5, iter.max = 100, nstart = 10)
kmeans(GA10@population, 10, iter.max = 10, nstart = 20)
km4<-kmeans(GA10@population, 4, iter.max = 100, nstart = 10) #klastry 3, iter 10, poczatkow 10 pkt 
GA10.km4<-kmeans(GA10@population, 4, iter.max = 100, nstart = 10) #klastry 3, iter 10, poczatkow 10 pkt 
GA10.km4<-kmeans(GA10@population, 3, iter.max = 100, nstart = 10) #klastry 3, iter 10, poczatkow 10 pkt  GA10.km5 <- kmeans(GA10@population, 6, iter.max = 100, nstart = 10) GA10.km10 <- kmeans(GA10@population, 10, iter.max = 10, nstart = 20) GA30.km4 <- kmeans(GA30@population, 3, iter.max = 100, nstart = 10)   GA30.km5 <- kmeans(GA30@population, 6, iter.max = 100, nstart = 10) GA30.km10 <- kmeans(GA30@population, 10, iter.max = 10, nstart = 20) GA50.km4 <- kmeans(GA50@population, 3, iter.max = 100, nstart = 10)  GA50.km5 <- kmeans(GA50@population, 6, iter.max = 100, nstart = 10) GA50.km10 <- kmeans(GA50@population, 10, iter.max = 10, nstart = 20)
GA50.km10
GA10.kmed <- pam(GA10, 3, medoids = true)
GA10.kmed <- pam(GA10, 3)
GA10.kmed <- pam(GA10@population, 3, medoids = true)
GA10.kmed <- pam(GA10@population, 3, medoids = 10)
GA10.kmed <- pam(GA10@population, 3, medoids = rep(0, 10))
GA10.kmed <- pam(GA10@population, 3, medoids = rep(0, 100))
GA10.kmed <- pam(GA10@population, 3, medoids ={1,2,3}))
GA10.kmed <- pam(GA10@population, 3, medoids = c(1, 16)))
GA10.kmed <- pam(GA10@population, 3, medoids = c(1, 16))
GA10.kmed <- pam(GA10@population, 2, medoids = c(1, 16))
GA10.kmed <- pam(GA10@population, 3, medoids = c(1, 2,3))
GA10.kmed <- pam(GA10@population, 3, medoids = 3:1)
GA50.kmed10 <- pam(GA50@population, 10, medoids = 10:1)
agnes(GA10@population, diss = FALSE, metric = "euclidean", method = "avarage");
agnes(GA10@population, diss = FALSE, metric = "euclidean", method = "avarage")
agnes(GA10@population, diss = FALSE, metric = "euclidean", method = "average")
agnes(GA10@population, diss = FALSE, metric = "euclidean", method = "single")
complete
agnes(GA10@population, diss = FALSE, metric = "euclidean", method = "completed")
agnes(GA10@population, diss = FALSE, metric = "euclidean", method = "complete")
plot(GA10.agn.cmpl)
GA10.agn.cmpl <- agnes(GA10@population, diss = FALSE, metric = "euclidean", method = "complete")
plot(GA10.agn.cmpl)
GA10.agn.ave <- agnes(GA10@population, diss = FALSE, metric = "flexible", method = "average")
plot(GA10.agn.cmpl)
plot(GA10.agn.ave)
GA10.agn.ave <- agnes(GA10@population, diss = FALSE, metric = "euclidean", method = "flexible")
install.packages("dbscan", lib="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("dbscan", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
dbscan(GA10@population,eps = 0.15,minPts = 10)
dbscan(GA10@population,eps = 0.5,minPts = 10)
dbscan(GA10@population,eps = 5,minPts = 10)
dbscan(GA10@population,eps = 50,minPts = 10)
dbscan(GA10@population,eps = 80,minPts = 10)
dbscan(GA10@population,eps = 50,minPts = 50)
dbscan(GA10@population,eps = 50,minPts = 5)
dbscan(GA10@population,eps = 50,minPts = 2)
dbscan(GA10@population,eps = 60,minPts = 2)
dbscan(GA10@population,eps = 80,minPts = 2)
dbscan(GA10@population,eps = 70,minPts = 2)
dbscan(GA10@population,eps = 65,minPts = 2)
dbscan(GA10@population,eps = 63,minPts = 2)
dbscan(GA10@population,eps = 68,minPts = 2)
dbscan(GA10@population,eps = 67,minPts = 2)
dbscan(GA10@population,eps = 65,minPts = 2)
dbscan(GA10@population,eps = 65,minPts = 3)
dbscan(GA10@population,eps = 65,minPts = 1)
dbscan(GA10@population,eps = 65,minPts = 2.5)
dbscan(GA10@population,eps = 65,minPts = 5)
dbscan(GA10@population,eps = 65,minPts = 2)
dbscan(GA10@population,eps = 80,minPts = )
dbscan(GA10@population,eps = 70,minPts = )
dbscan(GA10@population,eps = 70,minPts = 5)
db <- dbscan(GA10@population, eps = 70, minPts = 5)
data("multishapes",package = "factoextra")
install.packages("factoextra", lib="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
plot(db, GA10, main = "dbsan", frame = false)
plot(db, GA10@population, main = "dbsan", frame = false)
plot(db, GA10@popSize, main = "dbsan", frame = false)
plot(db, GA10@population, main = "dbsan", frame = false)
print(db)
plot(GA10@population)
plot(db, GA10@population[,2], main = "dbsan", frame = false)
plot(db, GA10@population[,1:2], main = "dbsan", frame = false)
plot(db, GA10@population[,2], main = "dbsan", frame = false)
plot(GA10@population)
plot(GA10@population)
db <- dbscan(GA10@population, eps = 10, minPts = 5)
print(db)
db <- dbscan(GA10@population, eps = 10, minPts = 10)
db <- dbscan(GA10@population, eps = 10, minPts = 80)
print(db)
db <- dbscan(GA10@population, eps = 20, minPts = 5)
print(db)
plot(GA10@population)
db <- dbscan(GA10@population, eps = 50, minPts = 5)
print(db)
plot(db, GA10@population[,2], main = "dbsan", frame = false)
db@cluster
print(db)
print(db)
plot(GA10@population)
plot(db)
print(db)
db <- dbscan(GA10@population, eps = 50, minPts = 15)
db <- dbscan(GA10@population, eps = 50, minPts = 15)
print(db)
db <- dbscan(GA10@population, eps = 50, minPts = 1)
print(db)
db <- dbscan(GA10@population, eps = 40, minPts = 15)
print(db)
db <- dbscan(GA10@population, eps = 50, minPts = 2)
db <- dbscan(GA10@population, eps = 50, minPts = 2)
print(db)
plot(GA10@population)
plot(GA10@population)
db <- dbscan(GA10@population, eps = 40, minPts = 2)
print(db)
db <- dbscan(GA10@population, eps = 10, minPts = 2)
print(db)
db <- dbscan(GA10@population, eps = 10, minPts = 20)
print(db)
db <- dbscan(GA10@population, eps = 40, minPts =15)
print(db)
install.packages("factoextra", lib="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
library("factoextra", lib.loc="C:/Users/konra/OneDrive/Dokumenty/R/win-library/3.3")
data("multishapes", package = "factoextra")
df <- multishapes[, 1:2]
GA10@population <- multishapes[, 1:2]
GA10 <- multishapes[, 1:2]
plot(db, GA10@population[,2], main = "dbsan", frame = false)
GA10 <- multishapes[, 1:2]
db <- dbscan(GA10@population, eps = 40, minPts =15)
data("multishapes", package = "factoextra")
GA10 <- multishapes[, 1:2]
db <- dbscan(GA10@population, eps = 40, minPts =15)
db <- dbscan(GA10, eps = 40, minPts =15)
plot(db, GA10[,1:2], main = "dbsan", frame = false)
data("multishapes", package = "factoextra")
GA10 <- multishapes[, 1:2]
db <- dbscan(GA10, eps = 40, minPts =15)
plot(db, GA10, main = "dbsan", frame = false)
plot(db, GA10@population, main = "dbsan", frame = false)
plot(db, GA10, main = "dbsan", frame = false)
data("multishapes", package = "factoextra")
GA10 <- multishapes[, 1:2]
db <- dbscan(GA10, eps = 40, minPts =15)
plot(db, GA10, main = "dbsan", frame = false)
plot(db, GA10@y, main = "dbsan", frame = false)
plot(db, GA10@x, main = "dbsan", frame = false)
plot(db, GA10@.Data, main = "dbsan", frame = false)
plot(db, GA10.Data, main = "dbsan", frame = false)
plot(db, GA10@ main = "dbsan", frame = false)
plot(db, GA10@.S3Class main = "dbsan", frame = false)
plot(db, GA10@.S3Class, main = "dbsan", frame = false)
GA10 <- ga(type = "real-valued",fitness = fx, min = rep(-100, 10),  max = rep(100, 10),  popSize = 100,   seed = 1234, monitor = NULL, maxiter = 100,pmutation = 0.5)
db <- dbscan(GA10@population, eps = 40, minPts =15)
print(db)
db <- dbscan(GA10@population[,1:2], eps = 40, minPts =15)
plot(db,GA10@population , main = "dbsan", frame = false)
db <- dbscan(GA10@population[,1:2], eps = 40, minPts =15)
plot(db,GA10@population , main = "dbsan", frame = false)
print(db)
db <- dbscan(GA10@population, eps = 40, minPts =15)
print(db)
db <- dbscan(GA10@population[,2], eps = 40, minPts =15)
plot(GA10@population)
db <- dbscan(GA10@population[1,2], eps = 40, minPts =15)
db <- dbscan(GA10@population[,1:3], eps = 40, minPts =15)
print(db)
print(db)
plot(GA10@population)
1:3
plot(GA10@population[, 1:3])
summary(GA10@population[, 1:3])
summary(GA10@population)
summary(GA10@population[, 1:3])
summary(GA10@population[, c(1,16)])
summary(GA10@population[, c(1,8)])
db <- dbscan(GA10@population[,1:10], eps = 40, minPts =15)
print(db)
db <- dbscan(GA10@population[,1:3], eps = 40, minPts =15)
print(db)
summary(GA10@population[, 1:5])
summary(GA10@population[, 1:100])
summary(GA10@population[, 1:10])
summary(GA10@population[, 1:11])
summary(GA10@population[, 1:3])
summary(GA10@population[1, 1:3])
summary(GA10@population[1:101, 1:3])
summary(GA10@population[1:100, 1:3])
summary(GA10@population)
db <- dbscan(GA10@population, eps = 40, minPts =15)
print(db)
db <- dbscan(GA10@population, eps = 40, minPts =25)
print(db)
db <- dbscan(GA10@population, eps = 20, minPts =25)
print(db)
db <- dbscan(GA10@population, eps = 10, minPts =25)
print(db)
db <- dbscan(GA10@population, eps = 45, minPts =15)
print(db)
db <- dbscan(GA10@population, eps = 47, minPts =15)
print(db)
db <- dbscan(GA10@population, eps = 50, minPts =15)
print(db)
db <- dbscan(GA10@population, eps = 50, minPts =10)
print(db)
db <- dbscan(GA10@population, eps = 50, minPts =8)
print(db)
db <- dbscan(GA10@population, eps = 50, minPts =7)
print(db)
db <- dbscan(GA10@population, eps = 50, minPts =6)
print(db)
db <- dbscan(GA10@population, eps = 55, minPts =6)
print(db)
db <- dbscan(GA10@population, eps = 60, minPts =6)
print(db)
db <- dbscan(GA10@population, eps = 60, minPts =7)
print(db)
db <- dbscan(GA10@population, eps = 60, minPts =5)
print(db)
db <- dbscan(GA10@population, eps = 20, minPts =5)
print(db)
db <- dbscan(GA10@population, eps = 70, minPts =5)
print(db)
print(db)
plot(GA10@population[,2])
plot(GA10@population[,1])
plot(GA10@population[,10])
plot(GA10@population[1,])
plot(GA10@population[1,5])
plot(GA10@population[1,])
plot(GA10@population[10,])
plot(GA10@population[1:10,])
plot(GA10@population[1:5,])
plot(GA10@population[,])
db <- dbscan(GA10@population[,], eps = 70, minPts =5)
print(db)
plot(GA10@population[,])
Summary(GA10@population)
Summary(GA10)
summary(GA10)
GA10
plot(GA10@population[,])
summary(GA10)
summary(GA10[,])
summary(GA10@population[,])
plot(GA10@population[1:100,])
summary(GA10@population[1:100,])
summary(GA10@population[1:100,1:10])
plot(GA10@population[,])
GA10@po
GA10@pop
GA10@population
GA10@population[1:100,> GA10@population[1:100,]]
GA10@population[1:100,]
summary(GA10@population[1:100,])
summary(GA10@population[,1:10])
summary(GA10@population[,1:100])
summary(GA10@population[1:10,])
summary(GA10@population[10:20,])
summary(GA10@population[1:5,])
summary(GA10@population[1,10])
